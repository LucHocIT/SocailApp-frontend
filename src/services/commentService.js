import api from './api';

const commentService = {
  // Get all comments for a post
  getCommentsByPostId: async (postId) => {
    try {
      const response = await api.get(`/comments/post/${postId}`);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi l·∫•y b√¨nh lu·∫≠n' };
    }
  },
  
  // Create a new comment
  createComment: async (commentData) => {
    try {
      const response = await api.post('/comments', commentData);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi t·∫°o b√¨nh lu·∫≠n' };
    }
  },

  // Update an existing comment
  updateComment: async (commentId, commentData) => {
    try {
      const response = await api.put(`/comments/${commentId}`, commentData);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi c·∫≠p nh·∫≠t b√¨nh lu·∫≠n' };
    }
  },

  // Delete a comment
  deleteComment: async (commentId) => {
    try {
      await api.delete(`/comments/${commentId}`);
      return true;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi x√≥a b√¨nh lu·∫≠n' };
    }
  },

  // Add or toggle a reaction to a comment
  addReaction: async (reactionData) => {
    try {
      const response = await api.post('/comments/reaction', reactionData);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi th·∫£ c·∫£m x√∫c cho b√¨nh lu·∫≠n' };
    }
  },
  
  // Get replies for a comment
  getReplies: async (commentId) => {
    try {
      const response = await api.get(`/comments/replies/${commentId}`);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi l·∫•y ph·∫£n h·ªìi cho b√¨nh lu·∫≠n' };
    }
  },
    // Get detailed reactions for a comment
  getCommentReactions: async (commentId) => {
    try {
      const response = await api.get(`/comments/${commentId}/reactions`);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi l·∫•y th√¥ng tin c·∫£m x√∫c b√¨nh lu·∫≠n' };
    }
  },

  // Get reaction emoji
  getReactionEmoji: (type) => {
    switch (type) {
      case 'like': return 'üëç';
      case 'love': return '‚ù§Ô∏è';
      case 'haha': return 'üòÜ';
      case 'wow': return 'üòÆ';
      case 'sad': return 'üò¢';
      case 'angry': return 'üò†';
      default: return 'üëç';
    }
  },

  // Report a comment
  reportComment: async (reportData) => {
    try {
      const response = await api.post('/comments/report', reportData);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi b√°o c√°o b√¨nh lu·∫≠n' };
    }
  },

  // Get comment reports (Admin only)
  getCommentReports: async (status = 'Pending') => {
    try {
      const response = await api.get(`/comments/reports?status=${status}`);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi l·∫•y danh s√°ch b√°o c√°o' };
    }
  },

  // Update comment report status (Admin only)
  updateReportStatus: async (reportId, statusData) => {
    try {
      const response = await api.put(`/comments/report/${reportId}`, statusData);
      return response.data;
    } catch (error) {
      throw error.response?.data || { message: 'L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i b√°o c√°o' };
    }
  }
};

export default commentService;
