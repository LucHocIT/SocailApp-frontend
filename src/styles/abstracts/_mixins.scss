@use 'variables' as *;

// Typography mixins
@mixin heading-1 {
  font-family: $font-family-heading;
  font-size: $font-size-4xl;
  font-weight: 700;
  line-height: 1.2;
}

@mixin heading-2 {
  font-family: $font-family-heading;
  font-size: $font-size-3xl;
  font-weight: 700;
  line-height: 1.2;
}

@mixin heading-3 {
  font-family: $font-family-heading;
  font-size: $font-size-2xl;
  font-weight: 600;
  line-height: 1.3;
}

@mixin body-text {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: 1.5;
}

// Layout mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin responsive-grid($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $spacing-4;
}

// Card mixins
@mixin card-base {
  background: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow;
  padding: $spacing-6;
  transition: $transition-base;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-5px);
    box-shadow: $shadow-lg;
  }
}

// Button mixins
@mixin button-base {
  padding: $spacing-2 $spacing-4;
  border-radius: $border-radius;
  font-weight: 500;
  transition: $transition-base;
  border: none;
  cursor: pointer;
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $gradient-primary;
  color: white;
  
  &:hover:not(:disabled) {
    box-shadow: 0 4px 8px rgba($primary-color, 0.3);
    transform: translateY(-2px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background: white;
  color: $primary-color;
  border: 1px solid $primary-color;
  
  &:hover:not(:disabled) {
    background: rgba($primary-color, 0.05);
  }
}

@mixin button-outline {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px solid $primary-color;
  border-radius: $border-radius;
  background-color: transparent;
  color: $primary-color;
  font-weight: 500;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:hover {
    background-color: $primary-color;
    color: white;
  }
}

// Form mixins
@mixin form-input {
  width: 100%;
  padding: $spacing-3 $spacing-4;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: $border-radius;
  font-size: $font-size-base;
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  background-color: rgba(255, 255, 255, 0.9);
  
  &::placeholder {
    color: $text-muted;
    transition: opacity 0.3s, transform 0.3s;
  }
  
  &:focus {
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
    outline: none;
    background-color: white;
    
    &::placeholder {
      opacity: 0.7;
      transform: translateX(5px);
    }
  }
  
  &:hover:not(:focus) {
    border-color: rgba($primary-color, 0.5);
  }
  
  &:disabled {
    background-color: rgba(0, 0, 0, 0.05);
    cursor: not-allowed;
  }
}

// Media query mixins
@mixin media-breakpoint-up($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) {
      @content;
    }
  }
}

@mixin media-breakpoint-down($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: #{$breakpoint-md - 1}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: #{$breakpoint-lg - 1}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: #{$breakpoint-xl - 1}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xxl - 1}) {
      @content;
    }
  }
}

// Loading spinner mixin
@mixin loading-spinner($size: 40px, $color: $primary-color) {
  width: $size;
  height: $size;
  border: 3px solid rgba($color, 0.1);
  border-radius: 50%;
  border-top-color: $color;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
