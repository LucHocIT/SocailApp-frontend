@use "sass:color";
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Base button styles
.btn {
  @include button-base;
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.2);
    transform: translate(-50%, -50%) scale(0);
    border-radius: 50%;
    transition: transform 0.5s ease-out;
  }

  &:hover::before {
    transform: translate(-50%, -50%) scale(2);
  }

  &:active {
    transform: scale(0.95);
  }
}

// Primary button
.btn-primary {
  background: linear-gradient(135deg,
    $primary-color,
    color.adjust($primary-color, $lightness: 15%)
  );
  color: white;
  box-shadow: 0 4px 10px rgba($primary-color, 0.25);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba($primary-color, 0.35);
    filter: brightness(1.1);
  }

  &:active {
    transform: translateY(-1px);
  }

  &.with-icon {
    display: inline-flex;
    align-items: center;
    gap: $spacing-2;

    svg {
      transition: transform 0.3s ease;
    }

    &:hover svg {
      transform: rotate(15deg) scale(1.2);
    }
  }
}

// Secondary button with hover effect
.btn-secondary {
  background: white;
  color: $text-dark;
  border: 2px solid $border-color;
  
  &:hover {
    border-color: $primary-color;
    color: $primary-color;
    background: rgba($primary-color, 0.05);
    transform: translateY(-1px);
  }
}

// Outline button with gradient border
.btn-outline {
  background: transparent;
  position: relative;
  border: none;
  padding: calc(#{$spacing-2} - 2px) calc(#{$spacing-4} - 2px);
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 2px;    background: linear-gradient(135deg, 
      $primary-color, 
      color.adjust($primary-color, $lightness: 15%)
    );
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    transition: opacity 0.3s ease;
  }

  &:hover {
    transform: translateY(-1px);
    
    &::before {
      opacity: 0.8;
    }
  }
}

// Floating action button
.btn-float {
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: $gradient-primary;
  color: white;
  box-shadow: $shadow-lg;
  position: fixed;
  bottom: $spacing-6;
  right: $spacing-6;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover {
    transform: translateY(-4px) rotate(90deg);
    box-shadow: 0 8px 20px rgba($primary-color, 0.4);
  }

  svg {
    font-size: $font-size-xl;
    transition: transform 0.3s ease;
  }
}

// Animated loading state
.btn-loading {
  position: relative;
  pointer-events: none;
  color: transparent !important;
  
  &::after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    top: 50%;
    left: 50%;
    margin: -10px 0 0 -10px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 0.8s infinite linear;
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
